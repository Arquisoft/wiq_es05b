name: Deploy on release

on:
  release:
    types: [published]

jobs:

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm --prefix users/authservice ci
      - run: npm --prefix users/userservice ci
      - run: npm --prefix userhistory ci
      - run: npm --prefix gatewayservice ci
      - run: npm --prefix jordi ci
      - run: npm --prefix webapp ci
      - run: npm --prefix users/authservice test -- --coverage
      - run: npm --prefix users/userservice test -- --coverage
      - run: npm --prefix userhistory test -- --coverage
      - run: npm --prefix gatewayservice test -- --coverage
      - run: npm --prefix jordi test -- --coverage
      - run: npm --prefix webapp test -- --coverage

      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  e2e-tests:
    name: End to end tests
    runs-on: self-hosted
    needs: [unit-tests]

    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - run: npm --prefix users/authservice install
    - run: npm --prefix users/userservice install
    - run: npm --prefix userhistory install
    - run: npm --prefix gatewayservice install
    - run: npm --prefix jordi install
    - run: npm --prefix webapp install
    - run: npm --prefix webapp run build

    - run: npm --prefix webapp run test:e2e

  docker-push-webapp:
    
    name: Push webapp Docker Image to GitHub Packages
    runs-on: self-hosted
    needs: [e2e-tests]

    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Set up Docker Buildx # required for building multi-platform images
      uses: docker/setup-buildx-action@v1

    - name: Check out the repo
      uses: actions/checkout@v4
    
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05b/webapp
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: webapp
        buildargs: API_URI, SSL_API_URI
        platforms: linux/arm64
    env:
        API_URI: https://cyt.is-cool.dev/api
        SSL_API_URI: http://cyt.is-cool.dev/api


  docker-push-authservice:

    name: Push auth service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    needs: [e2e-tests]

    permissions:
      contents: read
      packages: write

    steps:
    - name: Set up Docker Buildx # required for building multi-platform images
      uses: docker/setup-buildx-action@v1

    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
          name: arquisoft/wiq_es05b/authservice
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: users/authservice
          platforms: linux/arm64


  docker-push-userservice:

    name: Push user service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    needs: [e2e-tests]

    permissions:
      contents: read
      packages: write

    steps:
    - name: Set up Docker Buildx # required for building multi-platform images
      uses: docker/setup-buildx-action@v1

    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05b/userservice
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: users/userservice
        platforms: linux/arm64


  docker-push-gatewayservice:

    name: Push gateway service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    needs: [e2e-tests]

    permissions:
      contents: read
      packages: write

    steps:
    - name: Set up Docker Buildx # required for building multi-platform images
      uses: docker/setup-buildx-action@v1

    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05b/gatewayservice
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: gatewayservice
        platforms: linux/arm64


  docker-push-jordi:

    name: Push Jordi service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    needs: [e2e-tests]

    permissions:
      contents: read
      packages: write

    steps:
    - name: Set up Docker Buildx # required for building multi-platform images
      uses: docker/setup-buildx-action@v1
    
    - name: Check out the repo
      uses: actions/checkout@v4
    
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05b/jordi
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: jordi/
        platforms: linux/arm64

  docker-push-history:
    name: Push history service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
    - name: Set up Docker Buildx # required for building multi-platform images
      uses: docker/setup-buildx-action@v1

    - name: Check out the repo
      uses: actions/checkout@v4
    
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05b/history
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: userhistory
        platforms: linux/arm64

  docker-push-proxy:
    name: Push Nginx reverse proxy service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
    - name: Set up Docker Buildx # required for building multi-platform images
      uses: docker/setup-buildx-action@v1

    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Create SSL certificates
      run: |
        echo "${{ secrets.DEPLOY_SSL_CERT }}" > proxy/certificate.crt
        echo "${{ secrets.DEPLOY_SSL_CA_BUNDLE }}" > proxy/ca_bundle.crt
        echo "${{ secrets.DEPLOY_SSL_KEY }}" > proxy/private.key
      shell: bash
    
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: arquisoft/wiq_es05b/proxy
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        workdir: proxy
        platforms: linux/arm64
       
  deploy:
    name: Deploy over SSH
    runs-on: self-hosted
    needs: 
      - docker-push-userservice
      - docker-push-authservice
      - docker-push-gatewayservice
      - docker-push-webapp
      - docker-push-jordi
      - docker-push-history
      - docker-push-proxy
    steps:
    - name: Deploy over SSH
      uses: fifsky/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        user: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        
        command: |
            mkdir -p wiq_es05b
            cd wiq_es05b
            rm -rf ./*
            wget https://raw.githubusercontent.com/arquisoft/wiq_es05b/master/docker-compose.yml -O docker-compose.yml
            wget https://raw.githubusercontent.com/arquisoft/wiq_es05b/master/.env -O .env
            docker compose --profile prod down
            docker image prune -f
            docker compose --profile prod up -d --pull always
