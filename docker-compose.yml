version: '3'
services:
  
  mongodb:
    container_name: mongodb-${teamname:-wiq_es05b}
    image: mongo
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - mynetwork

    restart: always

  postgres:
    container_name: postgres-${teamname:-wiq_es05b}
    image: postgres
    volumes:
      - postgres_data:/data/db
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    environment:
      POSTGRES_PASSWORD: jordishhh

    restart: always

  authservice:
    container_name: authservice-${teamname:-wiq_es05b}
    image: ghcr.io/arquisoft/wiq_es05b/authservice:latest
    build: ./users/authservice
    depends_on:
      - mongodb
    ports:
      - "8002:8002"
    networks:
      - mynetwork
    environment:
      MONGODB_URI: mongodb://mongodb:27017/userdb
      SECRET: a-very-secret-string

    restart: always

  userservice:
    container_name: userservice-${teamname:-wiq_es05b}
    image: ghcr.io/arquisoft/wiq_es05b/userservice:latest
    build: ./users/userservice
    depends_on:
      - mongodb
    ports:
      - "8001:8001"
    networks:
      - mynetwork
    environment:
      MONGODB_URI: mongodb://mongodb:27017/userdb

    restart: always

  gatewayservice:
    container_name: gatewayservice-${teamname:-wiq_es05b}
    image: ghcr.io/arquisoft/wiq_es05b/gatewayservice:latest
    build: ./gatewayservice
    depends_on:
      - mongodb
      - userservice
      - authservice
    ports:
      - "8000:8000"
    networks:
      - mynetwork
    environment:
      AUTH_SERVICE_URL: http://authservice:8002
      USER_SERVICE_URL: http://userservice:8001
      JORDI_ASK_SERVICE_URL: http://jordi-ask:8003
      SECRET: a-very-secret-string
    
    restart: always

  webapp:
    container_name: webapp-${teamname:-wiq_es05b}
    image: ghcr.io/arquisoft/wiq_es05b/webapp:latest
    build: ./webapp
    depends_on:
      - gatewayservice
    ports:
      - "3000:3000" 

    restart: always

  jordi-ask:
    container_name: jordi-ask-${teamname:-wiq_es05b}
    image: ghcr.io/arquisoft/wiq_es05b/jordi-ask:latest
    build: ./jordi/jordi-ask
    ports:
      - "8004:8004"
    networks:
      - mynetwork
    environment:
      MONGODB_URI: mongodb://mongodb:27017/questions

    restart: always

  jordi-think:
    container_name: jordi-think-${teamname:-wiq_es05b}
    image: ghcr.io/arquisoft/wiq_es05b/jordi-think:latest
    build: ./jordi/jordi-think
    ports:
      - "8003:8003"
    networks:
      - mynetwork
    environment:
      MONGODB_URI: mongodb://mongodb:27017/questions

    restart: always

  ranking:
    container_name: ranking-${teamname:-wiq_es05b}
    image: ghcr.io/arquisoft/wiq_es05b/ranking:latest
    build: ./ranking
    ports:
      - "8005:8005"
    networks:
      - mynetwork
    environment:
      POSTGRES_URI: postgres://postgres:5432/ranking

  ## only dev

  prometheus:
    image: prom/prometheus
    container_name: prometheus-${teamname:-wiq_es05b}
    networks:
      - mynetwork
    volumes:
      - ./gatewayservice/monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on: 
      - gatewayservice
      
  grafana:
    image: grafana/grafana
    container_name: grafana-${teamname:-wiq_es05b}
    networks:
      - mynetwork
    volumes:
      - grafana_data:/var/lib/grafana
      - ./gatewayservice/monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SERVER_HTTP_PORT=9091
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "9091:9091"
    depends_on: 
      - prometheus

volumes:
  mongodb_data:
  postgres_data:
  prometheus_data: 
  grafana_data: 

networks:
  mynetwork:
    driver: bridge
