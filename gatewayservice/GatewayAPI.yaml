openapi: 3.0.3
info:
  title: CyT API specification
  description: Public API specification for the CyT project
  version: 2.0.0
servers:
  - url: 'https://cyt.is-cool.dev/api'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Question:
      type: object
      properties:
        _id:
          type: string
          example: '5f9b3b3b7b3b7b3b7b3b7b3b'
        category:
          type: string
          example: 'Category 1'
        statement:
          type: string
          example: 'Question 1'
        options:
          type: array
          items:
            type: string
            example: 'Option 1'
    Record:
      type: object
      properties:
        name:
          type: string
          example: 'user'
        points:
          type: integer
          example: 100
        date:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00Z'
    Save:
      type: object
      properties:
        _id:
          type: string
          example: '5f9b3b3b7b3b7b3b7b3b7b3b'
        userId:
          type: string
          example: '507f1f77bcf86cd799439011'
        category:
          type: string
          example: 'Category 1'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/HistoryQuestion'
        createdAt:
          type: string
          format: date-time
          example: '2021-06-01T00:00:00.000Z'
        finished:
          type: boolean
          example: false
        __v:
          type: integer
          example: 0
    HistoryQuestion:
      type: object
      properties:
        _id:
          type: string
          example: '5f9b3b3b7b3b7b3b7b3b7b3b'
        statement:
          type: string
          example: 'Question 1'
        options:
          type: array
          items:
            type: string
            example: 'Category 1'
        answer:
          type: integer
          example: 1
        correct:
          type: integer
          example: 0
        time:
          type: integer
          example: 10
        points:
          type: integer
          example: 10
paths:
# ------------------------------ Gateway Routes ------------------------------ #

  /health:
    get:
      summary: Check service availability
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'OK'
  /:
    get:
        summary: ¯\_(ツ)_/¯
        responses:
          '418':
            description: ¯\_(ツ)_/¯
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: '¯\_(ツ)_/¯'

# -------------------------------- Auth Routes ------------------------------- #

  /login:
    post:
      summary: Logs the user in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: 'user'
                password:
                  type: string
                  example: 'password'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXIifQ.1J4Q7'
                  username:
                    type: string
                    example: 'user'
                  userId:
                    type: string
                    example: '507f1f77bcf86cd799439011'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Missing required fields'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid credentials'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Internal server error'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service unavailable'
  /validate/{token}:
    get:
      summary: Validates a user token
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXIifQ.1J4Q7'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    example: true
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service Unavailable'

# -------------------------------- User Routes ------------------------------- #

  /adduser:
    post:
      summary: Adds a user to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: 'user'
                password:
                  type: string
                  example: 'password'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'User created successfully'
                  username:
                    type: string
                    example: 'user'
                  token:
                    type: string
                    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXIifQ.1J4Q7'
                  userId:
                    type: string
                    example: '507f1f77bcf86cd799439011'
                  error?:
                    type: string
                    example: 'Login service down'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Missing required fields'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Service Unavailable'
  /user/{userId}:
    get:
      summary: Get user details
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: '507f1f77bcf86cd799439011'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    example: 'user'
                  createdAt:
                    type: string
                    format: date-time
                    example: '2021-06-01T00:00:00.000Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid id format'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'User not found'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Service Unavailable'
  /users/search/{username}:
    get:
      summary: Searchs users by username
      # TODO - Add security
      # security:
      #   - bearerAuth: [ ]
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
            example: 'user'
      # TODO - Add error mapping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: '507f1f77bcf86cd799439011'
                    username:
                      type: string
                      example: 'user'
                    createdAt:
                      type: string
                      format: date-time
                      example: '2021-06-01T00:00:00.000Z'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Service Unavailable'
  /users/social/sendrequest:
    post:
      summary: Sends a friendrequest to a user
      # TODO - Add security
      # security:
      #   - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fromId:
                  type: string
                  example: '507f1f77bcf86cd799439011'
                toId:
                  type: string
                  example: '507f1f77bcf86cd799439011'
                name:
                  type: string
                  example: 'user'
      # TODO - Add error mapping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Friend request added successfully'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Service Unavailable'
  /users/social/sentrequests/{userId}:
    get:
      summary: Returns the friends requests sent by a user
      # TODO - Add security
      # security:
      #   - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: '507f1f77bcf86cd799439011'
      # TODO - Add error mapping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: '507f1f77bcf86cd799439011'
                    from:
                      type: object
                      properties:
                        username:
                          type: string
                          example: 'user'
                        userId:
                          type: string
                          example: '507f1f77bcf86cd799439011'
                    to:
                      type: object
                      properties:
                        userId:
                          type: string
                          example: '507f1f77bcf86cd799439011'
                    createdAt:
                      type: string
                      format: date-time
                      example: '2021-06-01T00:00:00.000Z'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Service Unavailable'
  /users/social/receivedrequests/{userId}:
    get:
      summary: Returns the friends requests received by the user
      # TODO - Add security
      # security:
      #   - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: '507f1f77bcf86cd799439011'
      # TODO - Add error mapping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: '507f1f77bcf86cd799439011'
                    from:
                      type: object
                      properties:
                        username:
                          type: string
                          example: 'user'
                        userId:
                          type: string
                          example: '507f1f77bcf86cd799439011'
                    to:
                      type: object
                      properties:
                        userId:
                          type: string
                          example: '507f1f77bcf86cd799439011'
                    createdAt:
                      type: string
                      format: date-time
                      example: '2021-06-01T00:00:00.000Z'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Service Unavailable'
  /users/social/acceptrequest/{fromId}/{userId}:
    post:
      summary: Accepts a friend request
      # TODO - Add security
      # security:
      #   - bearerAuth: [ ]
      parameters:
        - name: fromId
          in: path
          required: true
          schema:
            type: string
            example: '507f1f77bcf86cd799439011'
        - name: userId
          in: path
          required: true
          schema:
              type: string
              example: '507f1f77bcf86cd799439011'
      # TODO - Add error mapping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Friendship added successfully'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Service Unavailable'
  /users/social/friends/{userId}:
    get:
      summary: Returns the user friends
      # TODO - Add security
      # security:
      #   - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: '507f1f77bcf86cd799439011'
      # TODO - Add error mapping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user1:
                      type: object
                      properties:
                        username:
                          type: string
                          example: 'user'
                        _id:
                          type: string
                          example: '507f1f77bcf86cd799439011'
                        createdAt:
                          type: string
                          format: date-time
                          example: '2021-06-01T00:00:00.000Z'
                    user2:
                      type: object
                      properties:
                        username:
                          type: string
                          example: 'user'
                        _id:
                          type: string
                          example: '507f1f77bcf86cd799439011'
                        createdAt:
                          type: string
                          format: date-time
                          example: '2021-06-01T00:00:00.000Z'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Service Unavailable'
  /users/social/removefriend:
    post:
      summary: Removes a friend
      # TODO - Add security
      # security:
      #   - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: '507f1f77bcf86cd799439011'
                user2:
                  type: string
                  example: '507f1f77bcf86cd799439011'
      # TODO - Add error mapping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Friendship deleted successfully'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Service Unavailable'
  /users/social/rejectrequest:
    post:
      summary: Rejects a friendrequest
      # TODO - Add security
      # security:
      #   - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: '507f1f77bcf86cd799439011'
                fromId:
                  type: string
                  example: '507f1f77bcf86cd799439011'
      # TODO - Add error mapping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Friend request deleted successfully"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Internal Server Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Service Unavailable'
  /ranking/{n}:
    get:
      summary: Get the top n users
      parameters:
        - name: n
          in: path
          required: true
          schema:
            type: integer
            example: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Record'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid value for n'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service unavailable'

# ------------------------------ History Routes ------------------------------ #

  /history/get/{userId}?page={page}&limit={limit}:
    get:
      summary: Get all saves from a user
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 10
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: '507f1f77bcf86cd799439011'
      security:
        - BearerAuth: []
      responses:
        # TODO - Add error mapping
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maxPages:
                    type: integer
                    example: 1
                  saves:
                    type: array
                    items:
                      $ref: '#/components/schemas/Save'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid id format'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid session token'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service unavailable'
  /history/get/{userId}/{id}:
    get:
      summary: Get a save
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: '507f1f77bcf86cd799439011'
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: '507f1f77bcf86cd799439011'
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Save'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid id format'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid session token'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Save not found'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service unavailable'
  /history/create:
    post:
      summary: Creates a new save
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: '507f1f77bcf86cd799439011'
                category:
                  type: string
                  example: 'Category 1'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Save created successfully'
                  id:
                    type: string
                    example: '507f1f77bcf86cd799439011'
        '400':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Missing required fields'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid session token'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service unavailable'
  /history/add/{id}:
    post:
        summary: Adds a question to a save
        security:
          - BearerAuth: []
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
              example: '507f1f77bcf86cd799439011'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  last:
                    type: boolean
                    example: true
                  statement:
                    type: string
                    example: 'Statement'
                  options:
                    type: array
                    items:
                      type: string
                      example: 'Option 1'
                  answer:
                    type: integer
                    example: 1
        responses:
          '201':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: 'Save created successfully'
                    id:
                      type: string
                      example: '507f1f77bcf86cd799439011'
          '400':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: 'Missing required fields'
          '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid session token'
          '404':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: 'Save not found'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: 'An error occurred'
          '503':
            description: Service unavailable
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: 'Service unavailable'

# -------------------------------- Game Routes ------------------------------- #

  /game/answer:
    post:
      summary: Get the answer of a question
      parameters:
        - name: isHot
          in: query
          required: false
          schema:
            type: boolean
            example: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                questionId:
                  type: string
                  example: '5f9b3b3b7b3b7b3b7b3b7b3b'
                saveId:
                  type: string
                  example: '5f9b3b3b7b3b7b3b7b3b7b3b'
                token:
                  type: string
                  example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXIifQ.1J4Q7'
                last:
                  type: boolean
                  example: false
                answer:
                  type: string
                  example: "Answer 1"
                time:
                  type: integer
                  example: 10
                statement:
                  type: string
                  example: "Question 1"
                options:
                  type: array
                  items:
                    type: string
                    example: "Option 1"
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    example: 'Option 1'
                  points:
                    type: integer
                    example: 10
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid id format'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Question not found'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service Unavailable'
  /game/categories:
    get:
      summary: Get all categories
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: 'Category 1'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid session token'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service Unavailable'
  /game/questions/{category}/{n}:
    get:
      summary: Get n questions from a category
      parameters:
        - name: category
          in: path
          required: true
          schema:
            type: string
            example: 'Category 1'
        - name: n
          in: path
          required: true
          schema:
            type: integer
            example: 5
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid session token'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Question not found'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service Unavailable'
  
# ------------------------------- Admin Routes ------------------------------- #
  
  /admin/gen/{groupId}:
    get:
      summary: Generate questions for a specified group
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: 'capitals'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Questions generated successfully'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid session token'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'You are not an admin'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Group not found'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service Unavailable'
  /admin/gen:
    get:
      summary: Generate questions for all groups
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Questions generated successfully'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid session token'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'You are not an admin'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service Unavailable'
  /admin/groups:
    get:
      summary: Get all groups
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: 'capitals'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid session token'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'You are not an admin'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service Unavailable'
  /admin/addGroups:
    post:
      summary: Add groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                groups:
                  type: array
                  items:
                    type: string
                    example: 'capitals,asdf'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Groups added successfully'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Missing required fields'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid session token'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'You are not an admin'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Group already exists'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service Unavailable'
  /admin/removeGroup/{groupId}:
    get:
      summary: Remove a group
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
            example: 'capitals'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Group removed successfully'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid session token'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'You are not an admin'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Group not found'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service Unavailable'
  /admin/removeAllGroups:
    get:
      summary: Remove all groups
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Groups removed successfully'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid session token'
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'You are not an admin'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'An error occurred'
        '503':
          description: 'Service Unavailable'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Service Unavailable'
  